//
// Base styles
//
@import 'components-bs-package/mixins/buttons';

.btn {
  // scss-docs-end btn-css-vars
  display: inline-block;
  padding: var(--#{$prefix}btn-padding-y, 0.45rem ) var(--#{$prefix}btn-padding-x, 3.25rem );
  font-family: var(--#{$prefix}btn-font-family, arial);
  @include font-size(var(--#{$prefix}btn-font-size));
  font-weight: var(--#{$prefix}btn-font-weight, normal);
  line-height: var(--#{$prefix}btn-line-height, inherit);
  color: var(--#{$prefix}btn-color, white);
  text-align: center;
  text-decoration: if($link-decoration == none, null, none);
  white-space: $btn-white-space;
  vertical-align: middle;
  margin-bottom: var(--#{$prefix}btn-mb-bottom, 5px);
  cursor: if($enable-button-pointers, pointer, null);
  user-select: none;
  border: var(--#{$prefix}btn-border-width, 2px) solid var(--#{$prefix}btn-border-color, --bs-gray-300);
  @include border-radius(var(--#{$prefix}btn-border-radius, 0.25rem));
  @include gradient-bg(var(--#{$prefix}btn-bg, #0d6efd));
  @include box-shadow(var(--#{$prefix}btn-box-shadow));
  @include transition($btn-transition);

  &:hover {
    color: var(--#{$prefix}btn-hover-color, white);
    text-decoration: if($link-hover-decoration == underline, none, null);
    background-color: var(--#{$prefix}btn-hover-bg, #0761e5);
    border-color: var(--#{$prefix}btn-hover-border-color, transparent);
  }

  .btn-check + &:hover {
    // override for the checkbox/radio buttons
    color: var(--#{$prefix}btn-color, white);
    background-color: var(--#{$prefix}btn-bg,  #0761e5);
    border-color: var(--#{$prefix}btn-border-color,  #0761e5);
  }

  &:focus-visible {
    color: var(--#{$prefix}btn-hover-color);
    @include gradient-bg(var(--#{$prefix}btn-hover-bg));
    border-color: var(--#{$prefix}btn-hover-border-color, black);
    outline: 0;
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: var(--#{$prefix}btn-box-shadow), var(--#{$prefix}btn-focus-box-shadow);
    } @else {
      box-shadow: var(--#{$prefix}btn-focus-box-shadow);
    }
  }

  .btn-check:focus-visible + & {
    border-color: var(--#{$prefix}btn-hover-border-color);
    outline: 0;
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: var(--#{$prefix}btn-box-shadow), var(--#{$prefix}btn-focus-box-shadow);
    } @else {
      box-shadow: var(--#{$prefix}btn-focus-box-shadow);
    }
  }

  .btn-check:checked + &,
  :not(.btn-check) + &:active,
  &:first-child:active,
  &.active,
  &.show {
    color: var(--#{$prefix}btn-active-color);
    background-color: var(--#{$prefix}btn-active-bg, #0045ad);
    // Remove CSS gradients if they're enabled
    background-image: if($enable-gradients, none, null);
    border-color: var(--#{$prefix}btn-active-border-color);
    @include box-shadow(var(--#{$prefix}btn-active-shadow));

    &:focus-visible {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows {
        box-shadow: var(--#{$prefix}btn-active-shadow), var(--#{$prefix}btn-focus-box-shadow);
      } @else {
        box-shadow: var(--#{$prefix}btn-focus-box-shadow);
      }
    }
  }

  &:disabled,
  &.disabled,
  fieldset:disabled & {
    color: var(--#{$prefix}btn-disabled-color);
    pointer-events: none;
    background-color: var(--#{$prefix}btn-disabled-bg);
    background-image: if($enable-gradients, none, null);
    border-color: var(--#{$prefix}btn-disabled-border-color);
    opacity: var(--#{$prefix}btn-disabled-opacity);
    @include box-shadow(none);
  }
}

//
// Alternate buttons
//

@mixin button-variant(
  $colorname,
  $background,
  $border,
  $color: color-contrast($background),
  $hover-background: if($color == $color-contrast-light, shade-color($background, $btn-hover-bg-shade-amount), tint-color($background, $btn-hover-bg-tint-amount)),
  $hover-border: if($color == $color-contrast-light, shade-color($border, $btn-hover-border-shade-amount), tint-color($border, $btn-hover-border-tint-amount)),
  $hover-color: color-contrast($hover-background),
  $active-background: if($color == $color-contrast-light, shade-color($background, $btn-active-bg-shade-amount), tint-color($background, $btn-active-bg-tint-amount)),
  $active-border: if($color == $color-contrast-light, shade-color($border, $btn-active-border-shade-amount), tint-color($border, $btn-active-border-tint-amount)),
  $active-color: color-contrast($active-background),
  $disabled-background: $background,
  $disabled-border: $border,
  $disabled-color: color-contrast($disabled-background)
) {
  --#{$prefix}btn-color: var(--#{$prefix}btn-color-#{$colorname},#{$color});
  --#{$prefix}btn-bg: var(--#{$prefix}#{$colorname},#{$background});
  --#{$prefix}btn-border-color: var(--#{$prefix}#{$colorname},#{$border});
  --#{$prefix}btn-hover-color: var(--#{$prefix}btn-hover-color-#{$colorname},#{$hover-color});
  --#{$prefix}btn-hover-bg: var(--#{$prefix}#{$colorname}-hover,#{$hover-background});
  --#{$prefix}btn-hover-border-color: var(--#{$prefix}#{$colorname}-hover,#{$hover-border});
  --#{$prefix}btn-focus-shadow-rgb: var(--#{$prefix}btn-focus-shadow-rgb-#{$colorname},#{to-rgb(mix($color, $border, 15%))});
  --#{$prefix}btn-active-color: var(--#{$prefix}btn-active-color-#{$colorname},#{$active-color});
  --#{$prefix}btn-active-bg: var(--#{$prefix}#{$colorname}-active,#{$active-background});
  --#{$prefix}btn-active-border-color: var(--#{$prefix}#{$colorname}-active,#{$active-border});
  --#{$prefix}btn-active-shadow: var(--#{$prefix}btn-active-shadow-#{$colorname},#{$btn-active-box-shadow});
  --#{$prefix}btn-disabled-color: var(--#{$prefix}btn-disabled-color-#{$colorname},#{$disabled-color});
  --#{$prefix}btn-disabled-bg: var(--#{$prefix}#{$colorname}-disabled,#{$disabled-background});
  --#{$prefix}btn-disabled-border-color: var(--#{$prefix}#{$colorname}-disabled,#{$disabled-border});
}
// scss-docs-end btn-variant-mixin

// scss-docs-start btn-outline-variant-mixin
@mixin button-outline-variant(
  $colorname,
  $color,
  $color-hover: color-contrast($color),
  $active-background: $color,
  $active-border: $color,
  $active-color: color-contrast($active-background)
) {
  --#{$prefix}btn-color: var(--#{$prefix}btn-color-#{$colorname}, #{$color});
  --#{$prefix}btn-border-color: var(--#{$prefix}#{$colorname}, #{$color});
  --#{$prefix}btn-hover-color: var(--#{$prefix}btn-outline-color-#{$colorname}-hover, #{$color-hover});
  --#{$prefix}btn-bg: var(--#{$prefix}btn-bg-#{$colorname}, transparent);
  --#{$prefix}btn-hover-bg: var(--#{$prefix}btn-hover-bg-#{$colorname}, #{$active-background});
  --#{$prefix}btn-hover-border-color: var(--#{$prefix}#{$colorname}-hover, #{$active-border});
  --#{$prefix}btn-focus-shadow-rgb: var(--#{$prefix}btn-focus-shadow-rgb-#{$colorname}, #{to-rgb($color)});
  --#{$prefix}btn-active-color: var(--#{$prefix}#{$colorname}-active, #{$active-color});
  --#{$prefix}btn-active-bg: var(--#{$prefix}btn-active-bg-#{$colorname}, #{$active-background});
  --#{$prefix}btn-active-border-color: var(--#{$prefix}#{$colorname}-active, #{$active-border});
  --#{$prefix}btn-active-shadow: var(--#{$prefix}btn-active-shadow-#{$colorname}, #{$btn-active-box-shadow});
  --#{$prefix}btn-disabled-color: var(--#{$prefix}#{$colorname}-disabled, #{$color});
  --#{$prefix}btn-disabled-bg: transparent;
  --#{$prefix}btn-disabled-border-color: var(--#{$prefix}#{$colorname}-disabled, #{$color});
  --#{$prefix}gradient: none;
}

$btn-hover-bg-shade-amount:       15% !default;
$btn-hover-bg-tint-amount:        15% !default;
$btn-hover-border-shade-amount:   20% !default;
$btn-hover-border-tint-amount:    10% !default;
$btn-active-bg-shade-amount:      20% !default;
$btn-active-bg-tint-amount:       20% !default;
$btn-active-border-shade-amount:  25% !default;
$btn-active-border-tint-amount:   10% !default;

// scss-docs-start btn-variant-loops
@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @if $color == "light" {
      @include button-variant(
        $color,
        $value,
        $value,
        $hover-background: shade-color($value, $btn-hover-bg-shade-amount),
        $hover-border: shade-color($value, $btn-hover-border-shade-amount),
        $active-background: shade-color($value, $btn-active-bg-shade-amount),
        $active-border: shade-color($value, $btn-active-border-shade-amount)
      );
    } @else if $color == "dark" {
      @include button-variant(
        $color,
        $value,
        $value,
        $hover-background: tint-color($value, $btn-hover-bg-tint-amount),
        $hover-border: tint-color($value, $btn-hover-border-tint-amount),
        $active-background: tint-color($value, $btn-active-bg-tint-amount),
        $active-border: tint-color($value, $btn-active-border-tint-amount)
      );
    } @else {
      @include button-variant($color, $value, $value);
    }
  }
}

@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    @include button-outline-variant($color, $value);
  }
}
// scss-docs-end btn-variant-loops


//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {

  text-decoration: $link-decoration;
  @if $enable-gradients {
    background-image: none;
  }

  &:hover,
  &:focus-visible {
    text-decoration: $link-hover-decoration;
  }

  &:focus-visible {
    color: var(--#{$prefix}btn-color);
  }

  &:hover {
    color: var(--#{$prefix}btn-hover-color);
  }

  // No need for an active state here
}


//
// Button Sizes
//

.btn-lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-border-radius-lg);
}

.btn-sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-border-radius-sm);
}
