class AtomicSliderDotnavButton extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML="\n          <style>\n            :host {\n              display: inline-block;\n              z-index: 1;\n              display:block;\n              background:var(--base-slider-dotnav-button-background,white);\n              height: var(--base-slider-dotnav-button-height,12px);  \n              border-radius:100%;\n              margin: var(--base-slider-dotnav-button-margin,0 10px 0 0);\n              width: var(--base-slider-dotnav-button-width,12px);  \n              outline:none; \n              border: var(--base-slider-dotnav-button-border,solid 2px white);  \n              padding:0;\n              box-shadow: var(--base-slider-dotnav-button-shadow,0px 0px 3px 2px rgba(0,0,0,.4));\n            }\n\n            \n            :host([aria-selected=true]){\n              background:var(--base-slider-dotnav-button-background-active,#90cbff);\n              width: var(--base-slider-dotnav-button-active-width,12px);  \n              height: var(--base-slider-dotnav-button-active-height,12px);  \n            }\n            \n            :host(:focus) {\n              border: var(--base-slider-dotnav-button-focus-border,solid 2px white);  \n              box-shadow: var(--base-slider-dotnav-button-focus-shadow, 0 0 10px #9ecaed);\n              background:var(--base-slider-dotnav-button-background-active,#90cbff);\n            }\n          </style>\n          <slot></slot>\n        ",this._button=this.shadowRoot.querySelector("button")}connectedCallback(){this._button.addEventListener("click",this._handleClick.bind(this))}disconnectedCallback(){this._button.removeEventListener("click",this._handleClick.bind(this))}get label(){return this.getAttribute("label")}_handleClick(){const t=this.getAttribute("action");t&&this.dispatchEvent(new CustomEvent(t))}}customElements.get("atomic-slider-dotnav-button")||customElements.define("atomic-slider-dotnav-button",AtomicSliderDotnavButton);