export default class AtomicContainerQuery extends HTMLElement{constructor(){super(),this.shadowDom=this.attachShadow({mode:"open"}),this.shadowDom.innerHTML="\n            <slot></slot>\n        ",this.count=0,new ResizeObserver(t=>{this.changeTargetAttributesOrClass(this.target.offsetWidth,this.target.offsetHeight)}).observe(this.target),this.changeTargetAttributesOrClass(this.target.offsetWidth,this.target.offsetHeight)}static get observedAttributes(){return["target","config"]}get config(){return this.getAttribute("config").toString()}get target(){let t=this.getAttribute("target")?this.getAttribute("target").toString():null;return t?document.querySelector(t):this.shadowDom.childNodes.length>=1?this.querySelector(":scope > *"):void 0}changeTargetAttributesOrClass(t,e){if(!this.config||""===this.config)return void console.error("atomic-container-query: no config provided");this.config.split(",").forEach(e=>{let s=(e=e.split("||"))[0],i=e[1],r=i.includes("add")?"add":"remove",o=i.includes("[attr:")?"attribute":"class",a=i.split("|")[1].slice(0,-1);if(t>=s&&"class"===o?this.target.classList[r](a):"class"===o&&"add"===r&&this.target.classList.remove(a),"attribute"===o){let e=a.split("=");t>=s?"add"===r&&this.target.setAttribute(e[0],e[1]):"add"===r&&this.target.removeAttribute(e[0])}})}}void 0===customElements.get("atomic-container-query")&&customElements.define("atomic-container-query",AtomicContainerQuery);