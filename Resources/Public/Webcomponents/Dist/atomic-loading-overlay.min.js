export default class AtomicLoadingOverlay extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}get label(){return this.hasAttribute("label")?this.getAttribute("label"):""}get posHoriz(){return this.hasAttribute("posHorizontal")?this.getAttribute("posHorizontal"):"centered"}get posVert(){return this.hasAttribute("posVertical")?this.getAttribute("posVertical"):"centered"}firstUpdated(){"centered"===this.posHoriz||this.classList.add(this.posHoriz),"centered"===this.posVert||this.classList.add(this.posVert)}connectedCallback(){this.render()}render(){this.shadowRoot.innerHTML=`\n<style>\n   :host{\n        --atomic-loading-overlay--zindex:1000;\n        --atomic-loading-overlay--background-color:0,0,0;\n        --atomic-loading-overlay-background--color-alpha:0.2;\n        display:none;\n        align-items:center; justify-content:center; position:fixed;\n        left:0; width:100vw; top:0;height:100vh;\n        z-index:var(--atomic-loading-overlay--zindex);\n        background-color:rgba(var(--atomic-loading-overlay--background-color),var(--atomic-loading-overlay-background--color-alpha));\n    }\n    :host([transparent]){\n        background-color:transparent;\n    }\n    :host([open]){\n        display:flex;\n    }\n    :host([top]){\n        align-items:baseline;\n    }\n    :host([bottom]){\n        align-items:flex-end;\n    }\n    :host([left]){\n        justify-content:flex-start;\n    }\n    :host([right]){\n        justify-content:flex-end;\n    }\n    :host p {\n        padding:0;\n        margin:0 0 10px 0;\n        text-align:center;\n    }\n</style>\n            \n<div class="loadingContent">\n   <slot name="icon">\n        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="200px" height="200px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">\n            <g transform="rotate(0 50 50)">\n              <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#85a2b6">\n                <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.9166666666666666s" repeatCount="indefinite"></animate>\n              </rect>\n            </g><g transform="rotate(30 50 50)">\n              <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#85a2b6">\n                <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.8333333333333334s" repeatCount="indefinite"></animate>\n              </rect>\n            </g><g transform="rotate(60 50 50)">\n              <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#85a2b6">\n                <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.75s" repeatCount="indefinite"></animate>\n              </rect>\n            </g><g transform="rotate(90 50 50)">\n              <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#85a2b6">\n                <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.6666666666666666s" repeatCount="indefinite"></animate>\n              </rect>\n            </g><g transform="rotate(120 50 50)">\n              <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#85a2b6">\n                <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.5833333333333334s" repeatCount="indefinite"></animate>\n              </rect>\n            </g><g transform="rotate(150 50 50)">\n              <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#85a2b6">\n                <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.5s" repeatCount="indefinite"></animate>\n              </rect>\n            </g><g transform="rotate(180 50 50)">\n              <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#85a2b6">\n                <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.4166666666666667s" repeatCount="indefinite"></animate>\n              </rect>\n            </g><g transform="rotate(210 50 50)">\n              <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#85a2b6">\n                <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.3333333333333333s" repeatCount="indefinite"></animate>\n              </rect>\n            </g><g transform="rotate(240 50 50)">\n              <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#85a2b6">\n                <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.25s" repeatCount="indefinite"></animate>\n              </rect>\n            </g><g transform="rotate(270 50 50)">\n              <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#85a2b6">\n                <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.16666666666666666s" repeatCount="indefinite"></animate>\n              </rect>\n            </g><g transform="rotate(300 50 50)">\n              <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#85a2b6">\n                <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.08333333333333333s" repeatCount="indefinite"></animate>\n              </rect>\n            </g><g transform="rotate(330 50 50)">\n              <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#85a2b6">\n                <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="0s" repeatCount="indefinite"></animate>\n              </rect>\n            </g>\n        </svg>\n    </slot>\n    ${this.label?`<p>${this.label}</p>`:""}\n    <slot></slot>\n</div>\n           \n        `}}void 0===customElements.get("atomic-loading-overlay")&&customElements.define("atomic-loading-overlay",AtomicLoadingOverlay);