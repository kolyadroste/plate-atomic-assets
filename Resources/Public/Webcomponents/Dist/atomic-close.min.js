export default class AtomicClose extends HTMLElement{constructor(){super(),this.shadowDom=this.attachShadow({mode:"open"}),this.shadowDom.innerHTML='\n            <style>\n                :host{\n                  --atomic-close--margin:20px;\n                  --atomic-close--bt-size:20px;\n                  --atomic-close--bt-color-x:black;\n                  --atomic-close--bt-background:white;\n                  --atomic-close--bt-border-radius:30px;\n                  --atomic-close--bt-padding: 10px;\n                  --atomic-close--hover-margin: 10px 0 0 10px;\n                  --atomic-close--max-height: 500px;\n                  opacity: 1;\n                  display:inline-block;\n                  position: relative;\n                  min-height:calc(var(--atomic-close--bt-size) + var(--atomic-close--bt-padding));\n                }\n                :host([hidden]){\n                display:none;\n                }\n                .open-close-bt:hover{\n                  opacity: 0.9;\n                }\n                .hover-wrapper{\n                    visibility:hidden;\n                    position: absolute;\n                    top:0;\n                    left:100%;\n                    margin:var(--atomic-close--hover-margin);\n                    width:120px;\n                }\n                .open-close-bt{\n                    position: absolute;\n                    right:var(--atomic-close--margin);\n                    top:var(--atomic-close--margin);\n                    z-index:100;\n                    cursor:pointer;\n                    padding:var(--atomic-close--bt-padding);\n                    box-sizing: border-box;\n                    width: calc(var(--atomic-close--bt-size) + var(--atomic-close--bt-padding));\n                    border-radius: var(--atomic-close--bt-border-radius);\n                    background:var(--atomic-close--bt-background);\n                    fill:var(--atomic-close--bt-color-x);\n                    align-items: center;\n                    justify-content: center;\n                }\n                svg{\n                    width:calc(var(--atomic-close--bt-size) / 2);\n                }\n                .open-close-bt:hover .hover-wrapper{\n                    visibility: visible;\n                }\n                slot[name="open-icon"]{\n                    display: none;\n                }\n                :host([closed]) slot[name="hover-close-bt"]{\n                    display: none;\n                }\n                :host([closed]) slot[name="close-icon"]{\n                    display: none;\n                }\n                :host([closed]) slot[name="open-icon"]{\n                    display: block;\n                }\n                svg{\n                display:block;\n                }\n                .content-container{\n                    transition: max-height 0.5s ease-in-out;\n                    overflow: hidden;\n                    max-height:var(--atomic-close--max-height);  \n                    position: relative;\n                }\n                .content-container[closed]{\n                    max-height:0;  \n                }\n                \n            </style>\n            <div class="open-close-bt" part="close-bt">\n                <slot name="close-icon">\n                    <svg version="1.1" id="close" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\n                    \t viewBox="0 0 460.775 460.775" xml:space="preserve">\n                    <path d="M285.08,230.397L456.218,59.27c6.076-6.077,6.076-15.911,0-21.986L423.511,4.565c-2.913-2.911-6.866-4.55-10.992-4.55\n                    \tc-4.127,0-8.08,1.639-10.993,4.55l-171.138,171.14L59.25,4.565c-2.913-2.911-6.866-4.55-10.993-4.55\n                    \tc-4.126,0-8.08,1.639-10.992,4.55L4.558,37.284c-6.077,6.075-6.077,15.909,0,21.986l171.138,171.128L4.575,401.505\n                    \tc-6.074,6.077-6.074,15.911,0,21.986l32.709,32.719c2.911,2.911,6.865,4.55,10.992,4.55c4.127,0,8.08-1.639,10.994-4.55\n                    \tl171.117-171.12l171.118,171.12c2.913,2.911,6.866,4.55,10.993,4.55c4.128,0,8.081-1.639,10.992-4.55l32.709-32.719\n                    \tc6.074-6.075,6.074-15.909,0-21.986L285.08,230.397z"/>\n                </slot>\n                 <slot name="open-icon">\n                    <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\n                    \t viewBox="0 0 242.133 242.133" style="enable-background:new 0 0 242.133 242.133;" xml:space="preserve">\n                    <g id="XMLID_25_">\n                    \t<path id="XMLID_26_" d="M89.247,131.673l-47.732,47.73l-15.909-15.91c-4.29-4.291-10.742-5.572-16.347-3.252\n                    \t\tC3.654,162.563,0,168.033,0,174.1v53.032c0,8.284,6.716,15,15,15l53.033,0.001c0.007-0.001,0.012-0.001,0.019,0\n                    \t\tc8.285,0,15-6.716,15-15c0-4.377-1.875-8.316-4.865-11.059l-15.458-15.458l47.73-47.729c5.858-5.858,5.858-15.355,0-21.213\n                    \t\tC104.603,125.815,95.104,125.816,89.247,131.673z"/>\n                    \t<path id="XMLID_28_" d="M227.133,0H174.1c-6.067,0-11.536,3.655-13.858,9.26c-2.321,5.605-1.038,12.057,3.252,16.347l15.911,15.911\n                    \t\tl-47.729,47.73c-5.858,5.858-5.858,15.355,0,21.213c2.929,2.929,6.768,4.393,10.606,4.393c3.839,0,7.678-1.464,10.606-4.394\n                    \t\tl47.73-47.73l15.909,15.91c2.869,2.87,6.706,4.394,10.609,4.394c1.933,0,3.882-0.373,5.737-1.142\n                    \t\tc5.605-2.322,9.26-7.792,9.26-13.858V15C242.133,6.716,235.417,0,227.133,0z"/>\n                    </g>\n                    </svg>\n                </slot>\n                <div class="hover-wrapper">\n                    <slot name="hover-open-bt"></slot>   \n                    <slot name="hover-close-bt"></slot>   \n                </div>\n            </div>\n\n            <div class="content-container">\n                 <slot></slot>         \n            </div>\n\n        '}get closeTarget(){let t=this.hasAttribute("target")?this.getAttribute("target"):null;return t?t=document.querySelector(t):console.error("atomic-close: target not found"),t}get contentContainer(){return this.shadowRoot.querySelector(".content-container")}get button(){return this.shadowRoot.querySelector(".open-close-bt")}connectedCallback(){this.button.addEventListener("click",()=>{this.onPress()})}toggleButton(){console.log("toggleButton"),this.button.hasAttribute("closes")?this.button.removeAttribute("closed"):this.button.setAttribute("closed","")}toggleContent(){console.log("toggleContent"),this.contentContainer.hasAttribute("closed")?(this.contentContainer.removeAttribute("closed"),this.removeAttribute("closed")):(this.contentContainer.setAttribute("closed",""),this.setAttribute("closed",""))}onPress(){this.hasAttribute("toggleInnerContent")?(this.toggleContent(),this.toggleButton()):this.setAttribute("hidden","")}}void 0===customElements.get("atomic-close")&&customElements.define("atomic-close",AtomicClose);