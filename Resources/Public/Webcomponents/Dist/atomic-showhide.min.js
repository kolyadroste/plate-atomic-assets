class AtomicShowHide extends HTMLElement{constructor(){super(),this._show=this.getAttribute("show"),this._breakpoints={xs:parseInt(this.style.getPropertyValue("--atomic-showhide-bpxs"))||0,sm:parseInt(this.style.getPropertyValue("--atomic-showhide-bpsm"))||576,md:parseInt(this.style.getPropertyValue("--atomic-showhide-bpmd"))||768,lg:parseInt(this.style.getPropertyValue("--atomic-showhide-bplg"))||992,xl:parseInt(this.style.getPropertyValue("--atomic-showhide-bpxl"))||1200,xxl:parseInt(this.style.getPropertyValue("--atomic-showhide-bpxxl"))||1400}}connectedCallback(){this._updateVisibility(),window.addEventListener("resize",()=>this._updateVisibility())}disconnectedCallback(){window.removeEventListener("resize",()=>this._updateVisibility())}attributeChangedCallback(t,e,i){"show"===t&&(this._show=i,this._updateVisibility())}static get observedAttributes(){return["show"]}_updateVisibility(){1!==this._parseShowAttribute()[this._getCurrentBreakpoint()]&&this._show?this.style.display="none":this.style.display="block"}_parseShowAttribute(){const t=this._show.split(",");let e={};return t.forEach(t=>{let[i,s]=t.split(":");e[i]=parseInt(s)}),e}_getCurrentBreakpoint(){const t=window.innerWidth;let e="xs";return Object.entries(this._breakpoints).forEach(([i,s])=>{t>=s&&(e=i)}),e}}window.customElements.define("atomic-showhide",AtomicShowHide);