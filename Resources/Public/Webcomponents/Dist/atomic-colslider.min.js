class AtomicColSlider extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"});const t=this.getAttribute("index");this.shadowRoot.innerHTML='\n          <style>\n            :host {\n              display: block;\n              overflow: var(--acs-overflow, hidden);\n              position: relative;\n              background: var(--acs-bg, #000);\n              --acs-cols: 1;\n            }\n            :host([data-currcols="2"]){\n                --acs-cols: 2;\n            }\n            :host([data-currcols="3"]){\n                --acs-cols: 3;\n            }\n            :host([data-currcols="4"]){\n                --acs-cols: 4;\n            }\n            :host([data-currcols="5"]){\n                --acs-cols: 5;\n            }\n            :host([data-currcols="6"]){\n                --acs-cols: 6;\n            }\n            .slider-container {\n              display: flex;\n              flex-wrap: nowrap;\n              gap: var(--acs-gap, 0px); /* Set gap between slides */\n              transition: transform 0.5s ease-in-out;\n            }\n            .slider-slot::slotted(*) {\n              flex: 0 0 auto;\n              padding: var(--acs-padding, 0px);\n              box-sizing: border-box;\n            }\n            .slider-slot::slotted(.as-slide) {\n              width: calc((100% - (var(--acs-gap, 0px) * (var(--acs-cols) - 1))) / var(--acs-cols));\n            }\n            .control {\n              position: absolute;\n              top: 50%;\n              z-index: 1;\n              transform: translateY(-50%);\n            }\n            button{\n              height: var(--acs-control-dim, 30px);\n              width: var(--acs-control-dim, 30px);\n              background-color: #fff;\n              border: none;\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              line-height: 1;\n              cursor: pointer;\n            }\n            .control:hover {\n                opacity: 0.8;\n            }\n            .prev { left: 0; }\n            .next { right: 0; }\n          </style>\n          <div class="control prev"><slot name="prev"><button class="prev">&#10094;</button></slot></div>\n          <div class="slider-container" part="container">\n            <slot class="slider-slot"></slot>\n          </div>\n          <div class="control next"><slot name="next"><button class="next">&#10095;</button></slot></div>\n        ',this.index=t?parseInt(t,10):0,this.index>=this.slideAmount&&(this.index=this.slideAmount-this.cols),"last"===t&&(this.index=this.slideAmount-this.cols),"first"===t&&(this.index=0)}get sliderContainer(){return this.shadowRoot.querySelector(".slider-container")}get items(){return this.querySelectorAll(":scope > *:not([slot])")}get slideAmount(){return this.items.length}get images(){return this.querySelectorAll(":scope img")}connectedCallback(){this.init(),this.setupEvents(),this.updateLayout(),window.addEventListener("resize",this.updateLayout.bind(this)),"ontouchstart"in window&&this.setupTouchEvents(),this.sliderContainer.addEventListener("transitionend",()=>{this.isSliding=!1})}disconnectedCallback(){window.removeEventListener("resize",this.updateLayout.bind(this)),"ontouchstart"in window&&this.removeTouchEvents()}setupTouchEvents(){let t=0;const s=s=>{this.isSliding||(t=s.touches[0].pageX)},e=s=>{if(this.isSliding)return;const e=s.touches[0],n=t-e.pageX;n>40?(this.slide(1),s.preventDefault()):n<-40&&(this.slide(-1),s.preventDefault())};this.sliderContainer.addEventListener("touchstart",s),this.sliderContainer.addEventListener("touchmove",e),this._onTouchStart=s,this._onTouchMove=e}removeTouchEvents(){this.sliderContainer.removeEventListener("touchstart",this._onTouchStart),this.sliderContainer.removeEventListener("touchmove",this._onTouchMove)}init(){this.items.forEach(t=>{t.classList.add("as-slide")}),this.images.forEach(t=>{t.style.width="100%",t.style.height="auto",t.style.display="block"})}setupEvents(){this.shadowRoot.querySelector(".prev").addEventListener("click",()=>this.slide(-1)),this.shadowRoot.querySelector(".next").addEventListener("click",()=>this.slide(1))}get cols(){const t=this.getAttribute("cols"),s=null===t?"320:1,640:2,960:3":t;let e;try{if((e=s.split(",").map(t=>t.split(":").map(Number)).sort((t,s)=>s[0]-t[0])).some(t=>2!==t.length||isNaN(t[0])||isNaN(t[1])))throw new Error("Invalid cols configuration format")}catch(t){return console.error(t.message),1}const n=this.offsetWidth,i=e.find(t=>n>=t[0]);return i?i[1]:e[e.length-1][1]}updateLayout(){this.setAttribute("data-currcols",this.cols),this.updateSlider()}slide(t){if(this.isSliding)return;this.isSliding=!0;const s=this.shadowRoot.querySelector(".slider-slot").assignedElements();this.index+=t,this.index>s.length-this.cols&&(this.index=0),this.index<0&&(this.index=s.length-this.cols),this.cols!==this.previousCols&&(this.sliderContainer.style.transform="translateX(0)"),this.previousCols=this.cols,this.updateSlider()}updateSlider(){const t=parseInt(getComputedStyle(this).getPropertyValue("--acs-gap"),10)||0,s=getComputedStyle(this).getPropertyValue("--acs-gap")||0,e=(this.sliderContainer.offsetWidth-t*(this.cols-1))/this.cols;this.sliderContainer.style.transform=`translateX(calc(-${this.index} * (${e}px + ${s})))`}}customElements.get("atomic-colslider")||customElements.define("atomic-colslider",AtomicColSlider);