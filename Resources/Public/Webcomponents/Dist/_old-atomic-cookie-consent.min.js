class AtomicCookieConsent extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}get expiringDays(){return this.hasAttribute("expiringDays")?this.getAttribute("expiringDays"):365}get cookieStorage(){return this.hasAttribute("cookieStorage")?this.getAttribute("cookieStorage"):"document.cookie"}get cookieIdentifier(){return this.hasAttribute("cookieIdentifier")?this.getAttribute("cookieIdentifier"):"cookie_consent"}get identifier(){return this.hasAttribute("identifier")?this.getAttribute("identifier"):""}get embedType(){return this.hasAttribute("embedType")?this.getAttribute("embedType"):"iframe"}get contentName(){return this.hasAttribute("contentName")?this.getAttribute("contentName"):"Nicht gesetzt"}get contentProtector(){return this.hasAttribute("contentProtector")?this.getAttribute("contentProtector"):"Nicht gesetzt"}get linkPrivacyPolicy(){return this.hasAttribute("linkPrivacyPolicy")?this.getAttribute("linkPrivacyPolicy"):"#"}get valuesHTMLencoded(){return!!this.hasAttribute("valuesHTMLencoded")}get stateLoaded(){return this.hasAttribute("loaded")}get slotConsentedContent(){return this.querySelector('[slot="consentedContent"]')}get allowBt(){let t;return null===(t=this.querySelector('[slot="allowButton"]'))&&(t=this.shadowRoot.querySelector("button[allowBT]")),t}get allowAllBt(){let t;return null===(t=this.querySelector('[slot="allowAllButton"]'))&&(t=this.shadowRoot.querySelector("button[allowAllBT]")),t}get consentCookie(){var value="; "+eval(this.cookieStorage),values=value.split("; "+this.cookieIdentifier+"=");return 2==values.length&&(values=values.pop().split(";").shift(),values=decodeURIComponent(values),JSON.parse(values))}get doConsentCookieExist(){return!!this.consentCookie}get isCookieConsentedGlobally(){let t=this.consentCookie;if(t){if(t.options.includes(this.identifier))return!0;console.log(this.constructor.name+': cookie:"'+this.identifier+'" isnt consented globally')}else console.log(this.constructor.name+': cookie:"'+this.identifier+'" isnt consented globally')}_createCookie(){let t={consent:!1,options:[]};valuesHTMLencoded&&(t=encodeURIComponent(t));var e=new Date;e.setTime(e.getTime()+24*this.expiringDays*60*60*1e3);var o="expires="+e.toUTCString();document.cookie=this.cookieIdentifier+"="+t+";"+o+";path=/;SameSite=Strict"}_isEncoded(t){return t!==decodeURIComponent(t)}updateCookieConsent(){if(this.consentCookie){let o=this.consentCookie;if(o.options.includes(this.identifier))return;let n={consent:!0,options:[]};n.options=o.options,n.options.push(this.identifier),n=JSON.stringify(n),n=encodeURIComponent(n);var t=new Date;t.setTime(t.getTime()+24*this.expiringDays*60*60*1e3);var e="expires="+t.toUTCString();document.cookie=this.cookieIdentifier+"="+n+";"+e+";path=/;SameSite=Strict"}else console.error(this.constructor.name+": atomic-cookie-consent: cookie couldnt be updated")}connectedCallback(){this.render(),this.allowBt.addEventListener("click",t=>{this._onClickAllow()}),this.allowAllBt.addEventListener("click",t=>{this._onClickAllowGlobally()}),this.isCookieConsentedGlobally?this.showConsentContent():this.hideConsentContent(),document.addEventListener("atomic-cookie-consent-"+this.identifier,()=>{this.showConsentContent()},!1)}_onClickAllow(){this.showConsentContent()}_onClickAllowGlobally(){this.doConsentCookieExist||this._createCookie(),this.updateCookieConsent(),document.dispatchEvent(new CustomEvent("atomic-cookie-consent-"+this.identifier))}showConsentContent(){if(this.hasAttribute("loaded"))return;this.setAttribute("loaded","");let t=this.querySelector('script[type="text/x-gdpr-protected"]');if(t){let e=t.innerHTML;if(this.slotConsentedContent)this.slotConsentedContent.innerHTML=e;else{const t=document.createElement("div");t.setAttribute("slot","consentedContent"),this.appendChild(t),t.innerHTML=e}t.innerHTML=""}}hideConsentContent(){if(!this.hasAttribute("loaded"))return;this.removeAttribute("loaded");let t=this.querySelector('script[type="text/x-gdpr-protected"]');if(t){let e=this.slotConsentedContent.innerHTML;t.innerHTML=e}}updateStatus(){this.isCookieConsentedGlobally&&!this.stateLoaded&&this.showConsentContent()}render(){this.shadowRoot.innerHTML=`\n        <style>\n          :host{         \n             --atomic-cookie-consent--button-color: #008227;\n             \n             position:relative;\n             display:block;\n             min-height: var(--atomic-cookie-consent--min-height, 150px);\n          }\n          :host .overlay{\n            z-index:10;\n            background:var(--atomic-cookie-consent--background, #eee);\n            position:absolute;\n            left:0;\n            top:0;\n            height: calc(100% - 40px);\n            width:calc(100% - 40px);\n            display:flex;\n            align-items: center;\n            justify-content: center;\n            padding:20px;\n            box-shadow: 0 0 0 1px var(--atomic-cookie-consent--border-color.rgba(255,255,255,0.5));\n          }        \n          :host .overlay{\n            text-align:center;\n          }\n          \n          .intro-text{\n            display:block;\n          }\n          \n          :host([loaded]) .overlay{\n            display:none;\n            \n          }\n          :host button{\n            display:inline-flex;\n            padding:var(--atomic-cookie-consent--button-padding, 7px 15px);\n            cursor:pointer;\n            border: var(--atomic-cookie-consent-button-border, 2px solid #008227);\n            border-color:var(--atomic-cookie-consent-button-background-color, #008227);\n            color: var(--atomic-cookie-consent-button-color , #008227);\n            margin-bottom:10px;\n          }\n          :host button[allowAllBT]{\n            display:inline-flex;\n            border: var(--atomic-cookie-consent-button-all--border, 2px solid #008227);\n            background: var(--atomic-cookie-consent-button-all-background-color, #008227);\n            color: var(--atomic-cookie-consent-button-all-color , white);\n            margin-bottom:10px;\n          }\n          :host button:hover{\n            opacity:0.8;\n          }\n          :host([embed16by9]) [name="consentedContent"]{\n            position: relative;\n            display: block;\n            width: 100%;\n            padding: 56.25% 0 0 0;\n            overflow: hidden;\n          }\n          :host([embed16by9]) ::slotted([slot="consentedContent"]){\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n          }\n          \n        </style>\n        <div class="overlay">\n            <div class="centered">\n                <div part="intro-text">\n                    <slot name="introtext">\n                        <p>Mit dem Laden von "${this.contentName}" akzeptieren Sie die\n                        <br><a href="${this.linkPrivacyPolicy}" target="blank">Datenschutzerkl√§rung</a> von ${this.contentProtector}.</p>                \n                    </slot>                \n                </div>\n                <div part="buttons">\n                    <slot name="allowButton">\n                        <button allowBT class="button-allow" part="allowButton">\n                            ${this.contentName} laden\n                        </button>    \n                    </slot>\n                    <slot name="allowAllButton">\n                        <button allowAllBT class="button-allow" part="allowAllButton">\n                            ${this.contentName} "immer" laden\n                        </button>\n                    </slot>            \n                </div>            \n            </div>\n\n\n        </div>\n        <slot></slot>\n        <slot name="consentedContent"></slot>\n    `}}void 0===customElements.get("atomic-cookie-consent")&&customElements.define("atomic-cookie-consent",AtomicCookieConsent);