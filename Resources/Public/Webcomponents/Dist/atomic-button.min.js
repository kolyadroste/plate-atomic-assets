class AtomicButton extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render();let n=this;this.link&&this.addEventListener("click",()=>{window.location.href=n.link})}get link(){let n=this.querySelector("a");return n?n.getAttribute("href"):null}render(){this.shadowRoot.innerHTML='\n      <style>\n        :host{\n            background:var(--atomic-button-background, #22509a);\n            color:var(--atomic-button-color, white);\n            padding:var(--atomic-button-padding, 10px 20px);\n            border-radius:var(--atomic-button-radius, 3px);\n            display:inline-block;\n            cursor:pointer;\n        }\n        ::slotted(button){\n            background:transparent;\n            border:none;\n            padding:0;\n        }\n        ::slotted(*){\n             color:var(--atomic-button-color, inherit) !important;\n             cursor:pointer;\n             text-decoration: none;\n        }\n        :host([transparent]){\n            background:transparent;\n            color:var(--atomic-button-color-transparent,  #22509a);\n        }\n        :host(:hover){\n            background:var(--atomic-button-background-hover, #22509a);\n            color:var(--atomic-button-color-hover, white);\n        }\n        :host([transparent]:hover){\n            color:var(--atomic-button--color-transparent-hover, white);\n        }\n        .flex{\n            display:flex;\n            align-items: center;\n            gap: 10px;\n        }\n  \n      </style>\n    <div class="flex">\n        <slot name="before"></slot>\n        <slot></slot>\n        <slot name="after"></slot>\n    </div>\n    '}}void 0===customElements.get("atomic-button")&&customElements.define("atomic-button",AtomicButton);