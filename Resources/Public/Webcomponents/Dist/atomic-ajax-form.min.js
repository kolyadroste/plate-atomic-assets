export class AtomicAjaxForm extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.requestUrl=this.hasAttribute("url")?this.getAttribute("url"):this.form.getAttribute("action"),this.delay=this.hasAttribute("delay")?this.getAttribute("delay"):50}get resultSelector(){return this.getAttribute("resultSelector")}get form(){let e=this.querySelector("form");return null===e?(console.error('base-ajax-form: no form found. Please check the attribute "formSelector"'),!1):e}get loaderSelector(){return this.getAttribute("loaderSelector")}get loaderClass(){return this.getAttribute("loaderClass")}get loaderAttribute(){return this.getAttribute("loaderAttribute")}get loaderOpenMethod(){return this.getAttribute("loaderOpenMethod")}get loaderCloseMethod(){return this.getAttribute("loaderCloseMethod")}get loader(){let e,t=this.getAttribute("loaderSelector");return t&&(e=document.querySelector(t)),!e&&t?(console.error('base-ajax-form: no loader found. Please check the attribute "loaderSelector"'),!1):e}get resultContainer(){let e=this.getAttribute("resultSelector"),t=document.querySelector(e);return t||(t=this),null===t?(console.error('base-ajax-form: no resultContainer not found. Please check the attribute "resultSelector"'),!1):t}get callback(){this.getAttribute("callback")}_callCallBackTask(content){const configSlot=this.shadowRoot.querySelector('slot[name="callback"]'),config=configSlot.assignedNodes();if(config.length>0){var data;try{data=config[0].innerHTML}catch(e){return void this._throwError()}let callBackTask=eval(data);callBackTask(content)}}connectedCallback(){this.render(),this._addSubmitEvent()}_addSubmitEvent(){if(null===this.form)return console.error('base-ajax-form: no form found. Please check the attribute "formSelector"'),!1;this.form.addEventListener("submit",e=>{e.preventDefault(),this._xhr(this.form,this.requestUrl)})}render(){this.shadowRoot.innerHTML='\n            <style>\n                :host {\n                    position:relative;\n                }\n                :host .filterTree {\n                    list-style-type:none;\n                }\n            </style>\n            <slot></slot>\n            <slot name="callback"></slot>\n        '}_xhr(e,t){let r=this,o=new FormData(e);var s=new XMLHttpRequest;this.loaderSelector&&this._setLoader("open"),s.onload=(e=>{s.status>=200&&s.status<=300?setTimeout(()=>{let e;this.delay>50&&console.log("base-ajax-form: the attribute delay was set for demo purposes"),this.resultContainer?(e=s.responseText,r._callCallBackTask(this),this.resultContainer.innerHTML=e):(e=s.responseText,r._callCallBackTask(this),this.innerHTML=e),this._setLoader("close")},this.delay):console.log("failed with xhr-status: "+s.status)}),s.open("POST",t,!0),s.send(o)}serialize(e){let t={};for(let[r,o]of e)void 0!==t[r]?(Array.isArray(t[r])||(t[r]=[t[r]]),t[r].push(o)):t[r]=o;return t}_setLoader(mode){let loader=this.loader;if(!this.loaderSelector)return!1;if(!loader)return console.error("base-ajax-form: loader was set but could not be found"),!1;if(this.loaderAttribute)"open"===mode?loader.setAttribute(this.loaderAttribute,""):"close"===mode&&loader.removeAttribute(this.loaderAttribute);else if(this.loaderOpenMethod)if("function"==typeof loader[method])if("open"===mode){let method=eval(this.loaderOpenMethod);loader[method]}else{let method=eval(this.loaderCloseMethod);loader[method]}else console.error("base-ajax-form: the loaderOpenMethod was set but does not exist");else this.loaderClass?"open"===mode?loader.classList.add(this.loaderClass):loader.classList.remove(this.loaderClass):console.error("base-ajax-form: loaderSelector was set but config is missing")}}window.customElements.define("atomic-ajax-form",AtomicAjaxForm);