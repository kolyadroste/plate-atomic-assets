export default class AtomicOverlay extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.resizeObserver=new ResizeObserver(a=>{for(let t of a)this.updateClassBasedOnWidth(t.contentRect.width)})}connectedCallback(){this.render(),this.resizeObserver.observe(this)}disconnectedCallback(){this.resizeObserver.unobserve(this),this.windowResizeObserver.unobserve(document.body)}updateClassBasedOnWidth(a){this.classList.remove("small","medium","large","xlarge"),a>=0&&a<=599?this.classList.add("small"):a>=600&&a<=949?this.classList.add("medium"):a>=950&&a<=1249?this.classList.add("large"):a>=1250&&this.classList.add("xlarge")}render(){this.shadowRoot.innerHTML='\n      <style>\n            :host{\n                display:flex;\n                align-items:var(--atomic-overlay-text-valign, center);\n                justify-content:var(--atomic-overlay-text-halign, center);\n                position: relative;\n                box-sizing:border-box;\n                z-index:var(--atomic-overlay-z-index,100);\n                min-height:var(--atomic-overlay-min-height-small, 150px);\n                padding-top: var(--atomic-overlay-padding-top, 20px);\n                padding-bottom: var(--atomic-overlay-padding-bottom, 20px);\n            }\n            \n            ::slotted(*:last-child){\n                margin-bottom: 0 !important;\n            }\n            \n            figcaption{\n                background:var(--atomic-overlay-background, rgba(255,255,255,0.6));\n                box-shadow: var(--atomic-overlay-shadow, none);\n                padding:var(--atomic-overlay-figcaption-padding,20px);\n                color:var(--atomic-overlay-color, black);\n                /* fixes text issue with backdrop filter on chrome */ \n                -webkit-transform:translate3d(0,0,0);\n                width: var(--atomic-overlay-width-small, 100%);\n                box-sizing: border-box;\n            }\n            :host([backdropBlur]) figcaption{\n                backdrop-filter: blur(var(--atomic-overlay-figcaption-blur, 10px));\n            }\n            \n            :host(.medium){\n                min-height:var(--atomic-overlay-min-height-medium, 250px);\n            }\n            :host(.medium) figcaption{\n                width: var(--atomic-overlay-width-medium, 75%);\n            } \n            \n            :host(.large){\n                min-height:var(--atomic-overlay-min-height-large, 500px);\n            }\n            \n            :host(.large) figcaption{\n                width: var(--atomic-overlay-width-large, 50%);\n            } \n            \n            :host(.xlarge){\n                min-height:var(--atomic-overlay-min-height-xlarge, var(--atomic-overlay-min-height-large, 500px));\n            }\n            \n            :host(.xlarge) figcaption{\n                width: var(--atomic-overlay-width-xlarge, var(--atomic-overlay-width-large, 50%));\n            } \n            \n      </style>\n    <figcaption part="figcaption">\n        <slot></slot>\n    </figcaption>\n    '}}void 0===customElements.get("atomic-overlay")&&customElements.define("atomic-overlay",AtomicOverlay);